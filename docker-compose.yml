services:
  order-db:
    image: postgres:17.6
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=postgres
      - POSTGRES_HOST_AUTH_METHOD=md5
      - POSTGRES_INITDB_ARGS=--auth=md5
    networks:
      - backend-labs-network
    volumes:
      - order-db-data:/var/lib/postgresql/data/
  
  order-pgbouncer:
    image: edoburu/pgbouncer:v1.24.1-p1
    environment:
      - DB_HOST=order-db
      - DB_PORT=5432
      - DB_USER=user
      - DB_PASSWORD=mypassword
      - ADMIN_USERS=postgres,admin
    depends_on:
      - order-db
    networks:
      - backend-labs-network
    ports:
      - "15432:5432"
    
  order-rabbitmq:
    image: rabbitmq:3.13-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - order-rabbitmq-data:/var/lib/rabbitmq
  
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    environment:
      # RUN_MIGRATIONS: "true"
      APP_ENVIRONMENT: "Development"
    # entrypoint: ["./migrate"]
    volumes:
      - ./configs/order-service:/etc/order-service
    ports:
      - "5000:5000"
    depends_on:
      - order-pgbouncer
    networks:
      - backend-labs-network

networks:
  backend-labs-network:
    driver: bridge
  
volumes:
  order-db-data:
  order-rabbitmq-data:
